/**************************************************************

  File: DOSClient

**************************************************************/

#include <windows.h>
#include <stdio.h>
#include "..\DOSProxy\DOSProxy.h"     // generated by MIDL from ohello.idl
#include "..\DOSProxy\DOSProxy_i.c"

// the class ID of the server exe
const CLSID CLSID_DOSServer = 
	{0xce5a1814, 0x7557, 0x497c, { 0x9b, 0xb9, 0xa5, 0xf3, 0xd9, 0x6f, 0xc7, 0x92}};

void __cdecl main(int argc, char *argv[])
{
    HRESULT hr;
    IDOSServer *pDOSServer = 0;
 
    hr = CoInitialize(NULL);

    if(SUCCEEDED(hr))
    {
        hr = CoCreateInstance(CLSID_DOSServer, 0, CLSCTX_LOCAL_SERVER, IID_IDOSServer, (void **) &pDOSServer);
        if(SUCCEEDED(hr))
        {
			hr = pDOSServer->createBoss();
			if(SUCCEEDED(hr)) {
                printf("Boss created.\n");

				int nId;
				hr = pDOSServer->getBossId(&nId);
				if(SUCCEEDED(hr)) {
					printf("nId = %d\n", nId);
				}
				else {
					printf("Failure to get Id.\n");
				}

				hr = pDOSServer->destroyBoss();
				if(SUCCEEDED(hr)) {
					printf("Boss destroyed.\n");
				}
				else {
					printf("Failure to destroy Boss.\n");
				}
            }
            else {
                printf("Failed to create Boss.\n");
            }

            pDOSServer->Release();
        }
        else
        {
            printf("CoCreateInstance failed.\n");
   
            if(hr == REGDB_E_CLASSNOTREG)
                printf("Run server.exe /REGSERVER to install the server program.\n");
        }

        CoUninitialize();
    }
    else
    {
        printf("CoInitialize failed.\n");
    }   
}